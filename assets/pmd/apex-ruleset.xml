<?xml version="1.0" encoding="UTF-8"?>
<ruleset name="wtax"
         xmlns="http://pmd.sourceforge.net/ruleset/2.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://pmd.sourceforge.net/ruleset/2.0.0 https://pmd.sourceforge.io/ruleset_2_0_0.xsd">
  <description>WTax rule set for PMD</description>

  <!-- COMPLEXITY -->
  <rule ref="category/apex/design.xml/ExcessiveClassLength" message="Avoid really long classes (lines of code)">
    <properties>
      <property name="minimum" value="1000"/>
    </properties>
  </rule>
  <rule ref="category/apex/design.xml/ExcessiveParameterList" message="Avoid long parameter lists">
    <properties>
      <property name="minimum" value="4"/>
    </properties>
  </rule>
  <rule ref="category/apex/design.xml/ExcessivePublicCount"
        message="This class has too many public methods and attributes">
    <properties>
      <property name="minimum" value="25"/>
    </properties>
  </rule>
  <rule ref="category/apex/design.xml/NcssConstructorCount" message="The constructor has an NCSS line count of {0}">
    <properties>
      <property name="minimum" value="20"/>
    </properties>
  </rule>
  <rule ref="category/apex/design.xml/NcssMethodCount" message="The method {0}() has an NCSS line count of {1}">
    <properties>
      <property name="minimum" value="60"/>
    </properties>
  </rule>
  <rule ref="category/apex/design.xml/NcssTypeCount" message="The type has an NCSS line count of {0}">
    <properties>
      <property name="minimum" value="700"/>
    </properties>
  </rule>
  <rule ref="category/apex/design.xml/StdCyclomaticComplexity"
        message="The {0} ''{1}'' has a Standard Cyclomatic Complexity of {2}.">
    <properties>
      <property name="reportLevel" value="10"/>
    </properties>
  </rule>
  <rule ref="category/apex/design.xml/TooManyFields" message="Too many fields">
    <properties>
      <property name="maxfields" value="20"/>
    </properties>
  </rule>
  <rule ref="category/apex/design.xml/AvoidDeeplyNestedIfStmts"
        message="Deeply nested if..else statements are hard to read">
    <properties>
      <property name="problemDepth" value="4"/>
    </properties>
  </rule>
  <rule ref="category/apex/design.xml/CyclomaticComplexity">
  </rule>
  <!-- <rule ref="category/apex/design.xml/CognitiveComplexity"/> -->

  <!-- PERFORMANCE -->
  <rule ref="category/apex/performance.xml/OperationWithLimitsInLoop"
        message="Avoid operations in loops that may hit governor limits">
  </rule>
  <rule ref="category/apex/performance.xml/OperationWithHighCostInLoop"
        message="Avoid operations in loops that can impact performances">
  </rule>
  <rule ref="category/apex/errorprone.xml/AvoidDirectAccessTriggerMap"
        message="Avoid directly accessing Trigger.old and Trigger.new">
  </rule>
  <rule ref="category/apex/bestpractices.xml/AvoidLogicInTrigger" message="Avoid logic in triggers">
  </rule>
  <rule ref="category/apex/bestpractices.xml/AvoidGlobalModifier" message="Avoid using global modifier">
  </rule>
  <rule ref="category/apex/errorprone.xml/AvoidNonExistentAnnotations">
  </rule>
  <rule ref="category/apex/errorprone.xml/AvoidHardcodingId" message="Avoid hardcoding ID's">
  </rule>
  <!--    <rule ref="category/apex/performance.xml/AvoidDebugStatements" /> -->
  <!--    <rule ref="category/apex/performance.xml/EagerlyLoadedDescribeSObjectResult" /> -->

  <!-- NAMING -->
  <rule ref="category/apex/codestyle.xml/ClassNamingConventions"
        message="Class names should begin with an uppercase character optionally preceded by a lowercase prefix">
    <properties>
      <property name="testClassPattern" value="([a-z]+_)?[A-Z][a-zA-Z0-9_]*" />
      <property name="abstractClassPattern" value="([a-z]+_)?[A-Z][a-zA-Z0-9_]*" />
      <property name="classPattern" value="([a-z]+_)?[A-Z][a-zA-Z0-9_]*" />
      <property name="interfacePattern" value="([a-z]+_)?[A-Z][a-zA-Z0-9_]*" />
    </properties>
  </rule>
  <rule ref="category/apex/codestyle.xml/MethodNamingConventions"
        message="Method name does not begin with a lower case character.">
  </rule>
  <rule ref="category/apex/errorprone.xml/MethodWithSameNameAsEnclosingClass"
        message="Classes should not have non-constructor methods with the same name as the class">
  </rule>

  <!-- NAMING -->
  <rule ref="category/apex/codestyle.xml/FieldNamingConventions">
  </rule>
  <rule ref="category/apex/codestyle.xml/FormalParameterNamingConventions">
  </rule>
  <rule ref="category/apex/codestyle.xml/LocalVariableNamingConventions">
  </rule>
  <rule ref="category/apex/codestyle.xml/PropertyNamingConventions">
  </rule>

  <!-- TESTS -->
  <rule ref="category/apex/bestpractices.xml/ApexUnitTestClassShouldHaveAsserts"
        message="Apex unit test classes should have at least one System.assert() or assertEquals() or AssertNotEquals() call">
  </rule>
  <rule ref="category/apex/bestpractices.xml/ApexUnitTestShouldNotUseSeeAllDataTrue"
        message="@isTest(seeAllData=true) should not be used in Apex unit tests because it opens up the existing database data for unexpected modification by tests">
  </rule>
  <rule ref="category/apex/bestpractices.xml/ApexUnitTestClassShouldHaveRunAs"/>
  <!--    <rule ref="category/apex/bestpractices.xml/ApexAssertionsShouldIncludeMessage"/> -->
  <!--    <rule ref="category/apex/bestpractices.xml/ApexUnitTestMethodShouldHaveIsTestAnnotation"/> -->
  <!--    <rule ref="category/apex/errorprone.xml/TestMethodsMustBeInTestClasses"/> -->

  <!-- SECURITY -->
  <rule ref="category/apex/security.xml/ApexSharingViolations" message="Apex classes should declare a sharing model if DML or SOQL is used">
    <priority>2</priority>
  </rule>
  <rule ref="category/apex/security.xml/ApexInsecureEndpoint" message="Apex callouts should use encrypted communication channels">
    <priority>2</priority>
  </rule>
  <rule ref="category/apex/errorprone.xml/ApexCSRF">
    <priority>2</priority>
  </rule>
  <rule ref="category/apex/security.xml/ApexOpenRedirect" message="Apex classes should safely redirect to a known location">
    <priority>2</priority>
  </rule>
  <rule ref="category/apex/security.xml/ApexSOQLInjection" message="Apex classes should escape variables merged in DML query">
    <priority>2</priority>
  </rule>
  <rule ref="category/apex/security.xml/ApexXSSFromURLParam" message="Apex classes should escape Strings obtained from URL parameters">
    <priority>2</priority>
  </rule>
  <rule ref="category/apex/security.xml/ApexXSSFromEscapeFalse" message="Apex classes should escape addError strings">
    <priority>2</priority>
  </rule>
  <rule ref="category/apex/security.xml/ApexBadCrypto" message="Apex Crypto should use random IV/key">
    <priority>2</priority>
  </rule>
  <rule ref="category/apex/security.xml/ApexCRUDViolation" message="Validate CRUD permission before SOQL/DML operation">
  </rule>
  <rule ref="category/apex/security.xml/ApexDangerousMethods" message="Calling potentially dangerous method">
    <priority>2</priority>
  </rule>
  <rule ref="category/apex/security.xml/ApexSuggestUsingNamedCred" message="Consider using named credentials for authenticated callouts">
    <priority>2</priority>
  </rule>

  <!-- BRACES -->
  <rule ref="category/apex/codestyle.xml/IfStmtsMustUseBraces" message="Avoid using if statements without curly braces"/>
  <rule ref="category/apex/codestyle.xml/WhileLoopsMustUseBraces" message="Avoid using 'while' statements without curly braces"/>
  <rule ref="category/apex/codestyle.xml/IfElseStmtsMustUseBraces" message="Avoid using 'if...else' statements without curly braces"/>
  <rule ref="category/apex/codestyle.xml/ForLoopsMustUseBraces" message="Avoid using 'for' statements without curly braces"/>

  <!-- EMPTY -->
  <rule ref="category/apex/errorprone.xml/EmptyCatchBlock" message="Avoid empty catch blocks"/>
  <rule ref="category/apex/errorprone.xml/EmptyIfStmt" message="Avoid empty 'if' statements"/>
  <rule ref="category/apex/errorprone.xml/EmptyWhileStmt" message="Avoid empty 'while' statements"/>
  <rule ref="category/apex/errorprone.xml/EmptyTryOrFinallyBlock" message="Avoid empty try or finally blocks"/>
  <rule ref="category/apex/errorprone.xml/EmptyStatementBlock" message="Avoid empty block statements."/>

  <!-- STYLE -->
  <rule ref="category/apex/codestyle.xml/OneDeclarationPerLine"/>
  <rule ref="category/apex/codestyle.xml/FieldDeclarationsShouldBeAtStart"/>

  <!-- DOCUMENTATION -->
  <rule ref="category/apex/documentation.xml/ApexDoc" message="Document classes, methods, and properties that are public or global.">
    <priority>4</priority>
  </rule>

  <!-- CLARITY / BEST PRACTICES -->
  <rule ref="category/apex/bestpractices.xml/DebugsShouldUseLoggingLevel"/>
  <rule ref="category/apex/bestpractices.xml/UnusedLocalVariable"/>
  <rule ref="category/apex/errorprone.xml/OverrideBothEqualsAndHashcode">
    <priority>2</priority>
  </rule>
  <rule ref="category/apex/errorprone.xml/InaccessibleAuraEnabledGetter">
    <priority>2</priority>
  </rule>
</ruleset>
